{
    "collab_server" : "",
    "contents" : "\n#' Creating an ideal oncoMix gene\n#'\n#' This function allows you to generate a plot\n#' @param oe_means Set the difference between parameter means for\n#' the overexpressed (oe) group. Defaults to c(3,7)\n#' @keywords oncoMix, idealized, theoretical\n#' @export\n#' @examples\n#' oncoMixIdeal(oe_means=c(3,10))\n#' oncoMixIdeal(oe_means=c(2,18.5))\n\noncoMixIdeal <- function(oe_means=c(3,7)){\n    df3 <- data.frame(cbind(\"expr\"=c(rnorm(113, 3), c(rnorm(56,3),\n        rnorm(57, mean=6)))), \"type\"=as.factor(c(rep(2, 113), rep(1,113))))\n    type <- expr <- NULL\n    ggplot(df3, aes(x=expr, color=type, fill=type, group=type)) +\n    theme_classic() +\n    theme(\n        axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank(),\n        legend.position=\"none\",\n        plot.title=element_text(size=12),\n        axis.text=element_text(size=8),\n        axis.title=element_text(size=8),\n        axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank()\n        ) +\n    ggtitle(\"Theoretical\") +\n    xlim(oe_means[1]-3.2,oe_means[2]+3) +\n    stat_function(fun=\"dnorm\",\n        colour=\"#F8766D\",\n        args=list(mean=3.1, sd=0.7),\n        size=3) +\n    stat_function(fun=\"dnorm\",\n        colour=\"#F8766D\",\n        args=list(mean=2.9, sd=0.7),\n        size=3) +\n    stat_function(fun=\"dnorm\",\n        colour=\"#00BFC4\",\n        args=list(mean=oe_means[1], sd=1),\n        size=3) +\n    stat_function(fun=\"dnorm\",\n        colour=\"#00BFC4\",\n        args=list(mean=oe_means[2], sd=1),\n        size=3)\n}\n\n#' Creating an schematic of a 2-component mixture model\n#'\n#' This function allows you to generate a plot\n#' @param oe_means Set the values for the difference between parameter means\n#' @keywords oncoMix, idealized, theoretical\n#' @export\n#' @examples\n#' oncoMixBimodal(oe_means=c(3,7))\n#' oncoMixBimodal(oe_means=c(3,10))\n\noncoMixBimodal <- function(oe_means=c(3,7)){\n    d1 = data.frame(cbind(\"expr\"=c(rnorm(113, 3), c(rnorm(56,3),\n        rnorm(57, mean =6)))), \"type\"=as.factor(c(rep(2, 113), rep(1,113))))\n    type <- expr <- NULL\n    ggplot(d1, aes(x=expr, color=type, fill=type, group=type)) +\n        theme_classic() +\n        theme(\n            axis.title.y=element_blank(),\n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(),\n            legend.position=\"none\",\n            plot.title=element_text(size=12),\n            axis.text=element_text(size=8),\n            axis.title=element_text(size=8),\n            axis.title.x=element_blank(),\n            axis.text.x=element_blank(),\n            axis.ticks.x=element_blank()) +\n        ggtitle(\"Theoretical\") + xlim(-0.2,10) +\n        stat_function(fun=dnorm,\n            colour=\"#00BFC4\",\n            args=list(mean=oe_means[1], sd=1),\n            size=5) +\n        stat_function(fun=dnorm,\n            colour=\"#00BFC4\",\n            args=list(mean=oe_means[2], sd=1),\n            size=5)\n}\n\n#' Creating an schematic of a traditional differential expression experiment\n#'\n#' This function allows you to generate a schematic of the assumptions of a traditional DE\n#' expermiment between two known groups.\n#' @param means Set the values for the difference between parameter means\n#' @keywords oncoMix, idealized, theoretical, differential expression\n#' @export\n#' @examples\n#' oncoMixTraditionalDE(means=c(3,7))\n#' oncoMixTraditionalDE(means=c(3,10))\n\noncoMixTraditionalDE <- function(means=c(3,7)){\n    d2 <- data.frame(cbind(\"expr\"=c(rnorm(113, 3),\n        c(rnorm(56,3), rnorm(57, mean=6)))),\n        \"type\"=as.factor(c(rep(2, 113), rep(1,113))))\n    type <- expr <- NULL\n    ggplot(d2, aes(x=expr, color=type, fill=type, group=type)) +\n        theme_classic() +\n        theme(\n            axis.title.y=element_blank(),\n            axis.text.y=element_blank(),\n            axis.ticks.y=element_blank(),\n            legend.position=\"none\",\n            plot.title=element_text(size=12),\n            axis.text=element_text(size=8),\n            axis.title=element_text(size=8),\n            axis.title.x=element_blank(),\n            axis.text.x=element_blank(),\n            axis.ticks.x=element_blank()) +\n        ggtitle(\"Theoretical\") + xlim(-0.2,10) +\n        stat_function(fun=\"dnorm\",\n            colour=\"#F8766D\",\n            args=list(mean=means[1], sd=1),\n            size=5) +\n        stat_function(fun=\"dnorm\",\n            colour=\"#00BFC4\",\n            args=list(mean=means[2], sd=1),\n            size=5) #+\n}\n",
    "created" : 1505347213806.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3338721420",
    "id" : "20B78E36",
    "lastKnownWriteTime" : 1505348204,
    "last_content_update" : 1505348204639,
    "path" : "//data.einstein.yu.edu/home/dpique/dpLabNotebook/bimodality_brca_tcga/oncomix/R/oncoMix_examples.R",
    "project_path" : "R/oncoMix_examples.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}