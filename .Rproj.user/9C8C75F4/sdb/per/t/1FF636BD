{
    "collab_server" : "",
    "contents" : "\n#' Creating an ideal oncoMix gene\n#'\n#' This function allows you to generate a plot\n#' @param oe_means Set the difference between parameter means for the overexpressed (oe) group. Defaults to c(3,7)\n#' @keywords oncoMix, idealized, theoretical\n#' @export\n#' @examples\n#' oncoMixIdeal(oe_means = c(3,10))\n#' oncoMixIdeal(oe_means = c(2,18.5))\n\noncoMixIdeal <- function(oe_means=c(3,7)){\n  df3 = data.frame(cbind(\"expr\" = c(rnorm(113, 3), c(rnorm(56,3), rnorm(57, mean =6)))), \"type\"=c(rep(2, 113), rep(1,113)))\n  ggplot(df3, aes(x=expr, color=as.factor(type), fill=as.factor(type), group=as.factor(type))) +\n  theme_classic() +\n  theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),\n        legend.position = \"none\", plot.title = element_text(size = 12), axis.text=element_text(size=8),\n        axis.title=element_text(size=8), axis.title.x=element_blank(), axis.text.x=element_blank(),\n        axis.ticks.x=element_blank()) +\n  ggtitle(\"Theoretical\") + xlim(oe_means[1]-3.2,oe_means[2] + 3) +\n  stat_function(fun = \"dnorm\", colour = \"#F8766D\", args = list(mean = 3.1, sd=0.7), size=3) +\n  stat_function(fun = \"dnorm\", colour = \"#F8766D\", args = list(mean=2.9, sd=0.7), size = 3) +\n  stat_function(fun = \"dnorm\", colour = \"#00BFC4\", args = list(mean = oe_means[1], sd=1), size = 3) +\n  stat_function(fun = \"dnorm\", colour = \"#00BFC4\", args = list(mean = oe_means[2], sd=1), size = 3)\n}\n\n#' Creating an schematic of a 2-component mixture model\n#'\n#' This function allows you to generate a plot\n#' @param oe_means Set the values for the difference between parameter means\n#' @keywords oncoMix, idealized, theoretical\n#' @export\n#' @examples\n#' oncoMixBimodal(oe_means = c(3,7))\n#' oncoMixBimodal(oe_means = c(3,10))\n\noncoMixBimodal <- function(oe_means=c(3,7)){\n  d1 = data.frame(cbind(\"expr\" = c(rnorm(113, 3), c(rnorm(56,3), rnorm(57, mean =6)))), \"type\"=c(rep(2, 113), rep(1,113)))\n  ggplot(d1, aes(x=expr, color=as.factor(type), fill=as.factor(type), group=as.factor(type))) + theme_classic() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),legend.position = \"none\", plot.title = element_text(size = 12), axis.text=element_text(size=8), axis.title=element_text(size=8), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())+ ggtitle(\"Theoretical\") + xlim(-0.2,10) +\n    stat_function(fun = dnorm, colour = \"#00BFC4\", args = list(mean = oe_means[1], sd=1), size = 5) +\n    stat_function(fun = dnorm, colour = \"#00BFC4\", args = list(mean = oe_means[2], sd=1), size = 5)\n}\n\n#' Creating an schematic of a traditional differential expression experiment\n#'\n#' This function allows you to generate a schematic of the assumptions of a traditional DE\n#' expermiment between two known groups.\n#' @param means Set the values for the difference between parameter means\n#' @keywords oncoMix, idealized, theoretical, differential expression\n#' @export\n#' @examples\n#' oncoMixTraditionalDE(means = c(3,7))\n#' oncoMixTraditionalDE(means = c(3,10))\n\noncoMixTraditionalDE <- function(means=c(3,7)){\n  d2 = data.frame(cbind(\"expr\" = c(rnorm(113, 3), c(rnorm(56,3), rnorm(57, mean =6)))), \"type\"=c(rep(2, 113), rep(1,113)))\n  ggplot(d2, aes(x=expr, color=as.factor(type), fill=as.factor(type), group=as.factor(type))) + theme_classic() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),legend.position = \"none\", plot.title = element_text(size = 12), axis.text=element_text(size=8), axis.title=element_text(size=8), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())+ ggtitle(\"Theoretical\") + xlim(-0.2,10) +\n    stat_function(fun = \"dnorm\", colour = \"#F8766D\", args = list(mean=means[1], sd=1), size = 5) +\n    stat_function(fun = \"dnorm\", colour = \"#00BFC4\", args = list(mean=means[2], sd=1), size = 5) #+\n}\n",
    "created" : 1504639125999.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "216080354",
    "id" : "1FF636BD",
    "lastKnownWriteTime" : 1504728266,
    "last_content_update" : 1504728267217,
    "path" : "//data.einstein.yu.edu/home/dpique/dpLabNotebook/bimodality_brca_tcga/oncomix/R/oncoMix_examples.R",
    "project_path" : "R/oncoMix_examples.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}